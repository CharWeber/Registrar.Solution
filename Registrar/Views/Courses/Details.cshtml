@{
  Layout = "_Layout";
}

@model Registrar.Models.Course;

<h2>Course Details</h2>

<h3>@Model.Name</h3>

<h3>@Model.Number</h3>

@if(@Model.StudentJoinEntities.Count == 0)
{
  <p>This course has no students registered</p>
}
else
{
  <h4>The following students are registered</h4>
  <ul class="mx-auto">
  @foreach(var join in Model.StudentJoinEntities)
  {
    <li>@join.Student.Name
    <div class="form-div">
      @using (Html.BeginForm("DeleteStudent", "Courses"))
      {
        @Html.Hidden("joinId", @join.CourseStudentId)
        <input type="submit" value="Drop Student from Course"/>
      }
    </div></li>
  }
  </ul>
}

@if(ViewBag.NoStudents)
{
  <p>There are no students currently enrolled at this school...</p>
}
else
{
  @using (Html.BeginForm("AddStudent", "Courses"))
  {
    @Html.HiddenFor(model => model.CourseId)

    @Html.Label("Add Student ")
    @Html.DropDownList("StudentId")

    <input type="submit" value="save"/>
  }
}
@if(ViewBag.NoDepartments)
{
  <p>This course is not yet designated to a department</p>
}
else
{
  <br>
  <ul>
    
    <h3>This course is part of the following departments</h3>
    @foreach (var join in Model.DepartmentJoinEntities)
    {
    <li>@join.Department.Name
      <div class="footer-div">
        @using (Html.BeginForm("DeleteDepartment", "Courses"))
        {
          @Html.Hidden("joinId", @join.CourseDepartmentId)
          <input type="submit" value="Drop Department from Course"/>
        }
        
      </div></li>
    }
    
  </ul>
  @using (Html.BeginForm("AddDepartment", "Courses"))
  {
    @Html.HiddenFor(model => model.CourseId)

    @Html.Label("Add Department ")
    @Html.DropDownList("DepartmentId")

    <input type="submit" value="Declare Department"/>
  }
}

<p>@Html.ActionLink("Edit this course", "Edit", new { id = Model.CourseId })</p>
<p>@Html.ActionLink("Delete this course", "Delete", new { id = Model.CourseId })</p>